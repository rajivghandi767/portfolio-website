services:
  # PostgreSQL Database for Portfolio Backend
  portfolio-db:
    image: postgres:18-alpine
    container_name: portfolio-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      LC_ALL: "en_US.utf8"
      POSTGRES_INITDB_ARGS: "--locale=en_US.utf8"
    volumes:
      - portfolio_db_data:/var/lib/postgresql/data
      - portfolio_backups:/backups
    networks:
      - portfolio
      - database
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-q",
          "-d",
          "${POSTGRES_DB}",
          "-U",
          "${POSTGRES_USER}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # DB Migration & Static Files Collection
  portfolio-backend-init:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: portfolio-backend-init
    networks:
      - portfolio
    env_file: .env
    volumes:
      - portfolio_static:/home/backend/django/staticfiles
    depends_on:
      portfolio-db:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate --noinput && 
             python manage.py collectstatic --noinput"

  # Portfolio Backend - Django
  portfolio-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: portfolio-backend
    restart: unless-stopped
    networks:
      - portfolio
    depends_on:
      portfolio-db:
        condition: service_healthy
      portfolio-backend-init:
        condition: service_completed_successfully
    env_file: .env
    volumes:
      - portfolio_static:/home/backend/django/staticfiles
      - portfolio_media:/home/backend/django/mediafiles
      - portfolio_logs:/home/backend/django/logs
    user: "backend:backend_group"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  portfolio-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        - NODE_ENV=production
        - VITE_API_URL=${VITE_API_URL}
    container_name: portfolio-frontend
    restart: unless-stopped
    networks:
      - core
      - portfolio
    depends_on:
      portfolio-backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Single unified nginx service
  portfolio-nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: portfolio-nginx
    restart: unless-stopped
    networks:
      - core
      - portfolio
    depends_on:
      portfolio-backend:
        condition: service_healthy
      portfolio-frontend:
        condition: service_healthy
    volumes:
      - portfolio_static:/usr/share/nginx/html/static:ro
      - portfolio_media:/usr/share/nginx/html/media:ro
      - portfolio_logs:/var/log/nginx
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/nginx-status/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  portfolio_backups:
    name: portfolio_backups

  portfolio_db_data:
    name: portfolio_db_data

  portfolio_static:
    name: portfolio_static

  portfolio_media:
    name: portfolio_media

  portfolio_logs:
    name: portfolio_logs

networks:
  portfolio:
    external: true
  core:
    external: true
  database:
    external: true
